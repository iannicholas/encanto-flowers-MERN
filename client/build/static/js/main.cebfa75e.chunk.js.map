{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/GlobalState.js","utils/queries.js","utils/helpers.js","utils/auth.js","components/Navbar/index.js","components/CartQtyPicker/index.js","pages/Cart/index.js","components/Products/index.js","components/CategoryMenu/index.js","pages/Categories.js","components/QuantityPicker/index.js","utils/mutations.js","components/ProductItem/index.js","components/Hero/index.js","components/Featured/index.js","components/ShopNowBanner/index.js","components/Seasonal/index.js","components/FinePrint/index.js","pages/Home.js","components/Footer/index.js","pages/Success/index.js","pages/Signup/index.js","pages/Login/index.js","pages/UserProfile/index.js","pages/AdminPanel.js","App.js","index.js"],"names":["UPDATE_PRODUCTS","UPDATE_SELECTED_PRODUCT","ADD_TO_CART","ADD_MULTIPLE_TO_CART","UPDATE_CART_QUANTITY","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","UPDATE_TOTAL","UPDATE_CURRENT_QUANTITY","LOGGEDIN","LOGOUT","reducer","state","action","type","Object","objectSpread","products","toConsumableArray","concat","payload","categories","selectedProduct","currentQuantity","cart","product","map","_id","purchaseQuantity","newState","filter","currentCategory","total","loggedIn","StoreContext","createContext","Provider","StoreProvider","_ref","value","initialState","props","objectWithoutProperties","_useProductReducer","orderTotal","admin","useReducer","_useProductReducer2","slicedToArray","dispatch","react_default","a","createElement","assign","useStoreContext","useContext","QUERY_PRODUCT","gql","_templateObject","taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_ALL_PRODUCTS","_templateObject3","QUERY_CATEGORIES","_templateObject4","QUERY_USER","_templateObject5","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","autoIncrement","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","createRandomUser","guestUserName","string","i","Math","floor","random","length","randomUsername","userName","email","password","chars","randomNumber","substring","randomPassword","auth","decode","this","getToken","data","role","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","removeItem","EncantoNav","_useStoreContext","_useStoreContext2","_useQuery","useQuery","loading","userData","user","Auth","getRole","loggedInBackup","useEffect","forEach","category","then","Navbar","bg","expand","Container","Brand","href","alt","src","width","height","className","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","key","Name","onClick","logout","CartQtyPicker","item","thisItem","updateQuantity","plusminus","Row","Col","Button","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","getCheckout","calculateTotal","sum","price","toFixed","res","redirectToCheckout","sessionId","checkout","session","_getCart","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","stop","apply","arguments","getCart","Table","striped","image","img","name","style","calculateItemTotal","textAlign","variant","productIds","push","variables","parseFloat","AllProducts","decodedCategory","useParams","replace","selectedCategory","find","thisCategory","xs","s","md","lg","Card","productId","Img","paddingTop","Body","Title","Text","CategoryMenu","_useState","useState","_useState2","categoryName","updateCategoryName","DropdownButton","as","ButtonGroup","Dropdown","preventDefault","Categories","Products","QuantityPicker","ADD_USER","mutations_templateObject","DELETE_USER","mutations_templateObject2","ADD_ORDER","mutations_templateObject3","LOGIN","mutations_templateObject4","mutations_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","ProductItem","currentProduct","setCurrentProduct","error","_useState3","_useState4","addedToCart","toggleAdded","_useMutation","useMutation","addUser","addToCart","guestUser","_yield$addUser","_data","itemInCart","cartItem","sm","description","xmlns","fill","viewBox","d","Hero","Featured","ShopNowBanner","Seasonal","FinePrint","fluid","Home","Footer","Image","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","Signup","formState","setFormState","handleFormSubmit","event","login","_x","handleChange","_event$target","target","defineProperty","Form","onSubmit","Group","Label","Control","placeholder","onChange","react_router_dom","to","Login","_useMutation2","mutationResponse","t0","UserProfile","orderHistoryTable","deleteUser","orders","order","parseInt","purchaseDate","toLocaleDateString","useProgramMutation","_useMutation2$","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","GlobalState_StoreProvider","components_Navbar","react_router","path","element","pages_Home","pages_Signup","pages_Login","pages_UserProfile","pages_Categories","pages_Cart","pages_Success","AdminPanel_CategoryMenu","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.cebfa75e.chunk.js","sourcesContent":["// FUNCTION: Updates the list of available products in the global state variable\n// INPUT VARIABLES: None\nexport const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\n// FUNCTION: Updates the selected product variable in the global state\n// INPUT VARIABLES: selectedProduct(productId)\nexport const UPDATE_SELECTED_PRODUCT = \"UPDATE_SELECTED_PRODUCT\"\n\n// FUNCTION: Adds a new product to the cart global state variable\n// INPUT VARIABLES: product(product object)\nexport const ADD_TO_CART = \"ADD_TO_CART\";\n\n// FUNCTION: populates the cart global state from indexDB if the cart is empty on the cart page\n// INPUT VARIABLES: None\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\n\n// FUNCTION: TODO Removes an item from the cart global state\n// INPUT VARIABLES: \nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\n\n// FUNCTION: empties the cart global state\n// INPUT VARIABLES: \nexport const CLEAR_CART = \"CLEAR_CART\";\n\n// FUNCTION: Updates the quantity of an item in the cart\n// INPUT VARIABLES: _id(of product to be updated), purchaseQuantity\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\n\n// FUNCTION: updates the categories global state variable\n// INPUT VARIABLES: None\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\n\n// FUNCTION: updates the current category global state variable\n// INPUT VARIABLES: currentCategory(id)\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n\n// FUNCTION: Updates the total global state variable with the current cart total\n// INPUT VARIABLES: total(float)\nexport const UPDATE_TOTAL = \"UPDATE_TOTAL\";\n\n// FUNCTION: Updates the current quantity global state variable with the quantity of the currently selected product\n// INPUT VARIABLES: currentQuantity(int)\nexport const UPDATE_CURRENT_QUANTITY = \"UPDATE_CURRENT_QUANTITY\";\n\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\nexport const UPDATE_CATEGORY = \"UPDATE_CATEGORY\";\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\n\nexport const LOGGEDIN = \"LOGGEDIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const SET_ADMIN = \"SET_ADMIN\";\n","import { useReducer } from 'react';\nimport {\n  UPDATE_PRODUCTS,\n  ADD_PRODUCT,\n  UPDATE_PRODUCT,\n  DELETE_PRODUCT,\n  ADD_CATEGORY,\n  UPDATE_CATEGORY,\n  DELETE_CATEGORY,\n  UPDATE_CATEGORIES,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  UPDATE_SELECTED_PRODUCT,\n  UPDATE_TOTAL,\n  UPDATE_CURRENT_QUANTITY,\n  LOGGEDIN,\n  LOGOUT,\n} from './actions';\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_PRODUCT:\n      return {\n        ...state,\n        products: [...state.products, action.payload]\n      };\n\n    case UPDATE_PRODUCT:\n      return {\n        ...state,\n        products: action.payload\n      };\n\n    case DELETE_PRODUCT:\n      return {\n        ...state,\n        products: action.payload\n      };\n\n    case ADD_CATEGORY:\n      return {\n        ...state,\n        categories: [...state.categories, action.payload]\n      };\n\n    case UPDATE_CATEGORY:\n      return {\n        ...state,\n        categories: action.payload\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: action.categories,\n      };\n\n    case DELETE_CATEGORY:\n      return {\n        ...state,\n        categories: action.payload\n      };\n\n    case UPDATE_SELECTED_PRODUCT:\n      return {\n        ...state,\n        selectedProduct: [action.selectedProduct],\n      }  \n    \n    case UPDATE_CURRENT_QUANTITY:\n      return {\n        ...state,\n        currentQuantity: action.currentQuantity,\n      }\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n      \n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cart: [],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    case UPDATE_TOTAL:\n      return {\n        ...state,\n        total: action.total,\n      };\n    \n    case LOGGEDIN:\n      return {\n        ...state,\n        loggedIn: true,\n      };\n    \n    case LOGOUT:\n      return {\n        ...state,\n        loggedIn: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    categories: [],\n    currentCategory: '', \n    selectedProduct: '',\n    currentQuantity: 0,\n    orderTotal: 0,\n    loggedIn: false,\n    admin: false,\n  });\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCT = gql`\n    query getProduct($_id: ID!) {\n        product (_id: $_id) {\n            _id\n            name\n            description\n            price\n            image {\n                name\n                description\n                img\n            }\n            categories {\n                _id\n                Name\n            }\n        }\n    }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!, $total: Float! ) {\n    checkout(products: $products, total: $total) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n     query products {\n        products {\n            _id\n            name\n            description\n            price\n            image {   \n                name\n                description\n                img\n            }\n            categories {\n                _id\n                Name\n            }\n        }\n    }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n    query categories {\n        categories {\n            _id\n            Name\n        }\n    }\n`;\nexport const QUERY_USER = gql`\n    query user {\n        user {\n            _id\n            userName\n            email\n            password\n            role\n            orders {\n                _id\n                purchaseDate\n                products {\n                    _id\n                    name\n                    description\n                    price\n                   image {\n                       _id\n                       name\n                       description\n                       img \n                   }\n                }\n                total\n            }\n        }\n    }\n`;","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('encanto-flowers', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id', });\n      db.createObjectStore('total', { autoIncrement: true });\n    };\n\n    request.onerror = function (e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function (e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function (e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function () {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}\n\nfunction randomPassword() {\n  let chars = \"qwertyuioplkjhgfdsazxcvbnm0123456789QWERTYUIOPLKJHGFDSAZXCVBNM!\";\n  let passwordLength = 12;\n  let password = \"\";\n\n  for (let i = 0; i < passwordLength; i++) {\n    let randomNumber = Math.floor(Math.random() * chars.length);\n    password += chars.substring(randomNumber, randomNumber + 1)\n  }\n  return password\n}\n\nfunction randomUsername() {\n  let chars = \"1234567890\";\n  let string = \"\";\n\n  for (let i = 0; i < 6; i++) {\n    string += chars[Math.floor(Math.random() * chars.length)];\n  }\n  return (\"Guest\" + string)\n}\n\nexport function createRandomUser() {\n  let guestUserName = randomUsername()\n  let guestPassword = randomPassword()\n  let guestEmail = guestUserName + \"@encantoguest.com\"\n\n  return {\n    userName: guestUserName,\n    email: guestEmail,\n    password: guestPassword\n  }\n}","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  getRole() {\n    const token = this.getToken();\n    if (token != null) {\n      const decodedToken = decode(this.getToken());\n      return decodedToken.data.role;\n    }\n    else {\n      return 4;\n    }\n    \n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    if (token == null) {\n      return false;\n    }\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout(idToken) {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token', idToken);\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { Navbar, NavDropdown, Nav, Container } from 'react-bootstrap';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES, QUERY_USER } from '../../utils/queries';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  LOGOUT\n} from '../../utils/actions';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { idbPromise } from '../../utils/helpers';\nimport './style.css';\nimport Auth from '../../utils/auth';\n\n\nfunction EncantoNav() {\n\n  const [state, dispatch] = useStoreContext();\n\n  const { loading, data } = useQuery(QUERY_CATEGORIES);\n  \n  const { data: userData } = useQuery(QUERY_USER);\n\n  let user;\n\n  if (userData) {\n    user = userData.user;\n  }\n\n  const { categories, loggedIn } = state;\n\n  const role = Auth.getRole();\n  const loggedInBackup = Auth.loggedIn();\n  console.log(role);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: data.categories,\n      });\n      data.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [data, loading, dispatch, loggedIn]);\n\n  const handleNavClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n\n  };\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Container>\n        {(loggedIn || loggedInBackup) && Auth.getRole() === 1 ? (<Navbar.Brand href=\"/adminpanel\">\n          <img\n            alt=\"\"\n            src=\"/images/encanto_logo_nav.png\"\n            width=\"90\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n          /></Navbar.Brand>) : (\n        <Navbar.Brand href=\"/\">\n          <img\n            alt=\"\"\n            src=\"/images/encanto_logo_nav.png\"\n            width=\"90\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n          />\n        </Navbar.Brand> )}\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <NavDropdown title=\"Categories\" id=\"basic-nav-dropdown\">\n              {loading ? (\n                <div>\n                  <NavDropdown.Item href=\"#\" key='None'>'Categories loading...'</NavDropdown.Item>\n                </div>\n              ) : (\n                <div>\n                  {categories.map((category) => (\n                    <NavDropdown.Item href={`/categories/${category.Name}`} key={category._id}\n                      onClick={() => {handleNavClick(category._id)}}>\n                        {category.Name}\n                    </NavDropdown.Item>\n                  ))}\n                </div>\n              )}\n            </NavDropdown>\n            {(loggedIn || loggedInBackup) && role == 1 ? (\n              <Nav.Link href=\"/addproduct\">Add Product</Nav.Link>\n            ) : (<div></div>)}\n            {(loggedIn || loggedInBackup) && role == 1 ? (\n              <Nav.Link href=\"/addcategory\">Add Category</Nav.Link>\n            ) : (<div></div>)}\n            {(loggedIn || loggedInBackup) && role == 1 ? (\n              <Nav.Link href=\"/updateproduct\">Update Product</Nav.Link>\n            ) : (<div></div>)}\n            {(loggedIn || loggedInBackup) && role == 1 ? (\n              <Nav.Link href=\"/updatecategory\">Update Category</Nav.Link>\n            ) : (<div></div>)}\n            {(loggedIn || loggedInBackup) && role < 2 ? (\n              <Nav.Link href=\"/\" onClick={() => {Auth.logout(); dispatch({ type: LOGOUT });}}>Logout</Nav.Link>\n            ) : (\n              <div></div>\n            )}\n            {(loggedIn || loggedInBackup) ? (\n              <Nav.Link href=\"/cart\">Cart</Nav.Link>\n            ) : (\n              <div></div>\n            )}\n            {(loggedIn || loggedInBackup) && role < 2 ? (\n              <Nav.Link href=\"/userprofile\">Profile</Nav.Link>\n            ) : (\n              <div></div>\n            )}\n            {!(loggedIn || loggedInBackup) ? (\n              <Nav.Link href=\"/signup\">Sign Up</Nav.Link>\n            ) : (\n              <div></div>\n            )}\n            {!(loggedIn || loggedInBackup) ? (\n              <Nav.Link href=\"/login\">Sign In</Nav.Link>\n            ) : (\n              <div></div>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default EncantoNav;\n","// Import useEffect from React.\nimport React from \"react\";\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\nimport { UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport \"./style.css\";\n\nexport default function CartQtyPicker(item) {\n    const thisItem = item.item;\n    const [state, dispatch] = useStoreContext();\n\n  const updateQuantity = (plusminus) => {\n    if (plusminus === \"plus\") {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: thisItem._id,\n        purchaseQuantity: thisItem.purchaseQuantity + 1,\n      });\n      idbPromise(\"cart\", \"put\", {\n        ...thisItem,\n        purchaseQuantity: thisItem.purchaseQuantity + 1,\n      });\n    } else if (plusminus===\"minus\" && thisItem.purchaseQuantity > 1) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: thisItem._id,\n        purchaseQuantity: thisItem.purchaseQuantity - 1,\n      });\n      idbPromise(\"cart\", \"put\", {\n        ...thisItem,\n        purchaseQuantity: thisItem.purchaseQuantity - 1,\n      });\n    }\n  };\n\n  return (\n    <Container className=\"button-container-cart\">\n      <Row>\n        <Col>\n          <Button\n            onClick={()=>{updateQuantity(\"minus\")}}\n            className=\"button-qty-cart button-sel-cart\"\n          >\n            -\n          </Button>\n        </Col>\n        {thisItem.purchaseQuantity}\n        <Col>\n          <Button\n            onClick={() => {updateQuantity(\"plus\")}}\n            className=\"button-qty-cart button-sel-cart\"\n          >\n            +\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { UPDATE_TOTAL } from '../../utils/actions';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport { Button , Table, Container  } from 'react-bootstrap';\nimport CartQtyPicker from '../../components/CartQtyPicker';\nimport './style.css'\n\nconst stripePromise = loadStripe('pk_test_51L0VV3LPz0RFKIjd3EYrAXUdRZuvg8UiM7umz4piCUvWVKswkNXlX16hNBy4W4beVZo2xcCLNyXOffGD7MRzTMrv00ynQ9o8ej');\n\nfunction Cart() {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n  \n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function calculateItemTotal(item) {\n    return item.price * item.purchaseQuantity\n  }\n\n  function submitCheckout() {\n    dispatch({\n      type: UPDATE_TOTAL,\n      total: calculateTotal(),\n    });\n    idbPromise('total', 'put', calculateTotal());\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds, total: parseFloat(calculateTotal()) },\n    });\n  }\n  return (\n    <div className='shopping-cart my-5 pb-5'>\n      <Container> \n      <h3>Your Cart Items</h3>\n      <a href=\"/\">Back to shopping</a>\n      <Table striped>\n        <thead className='table-header'>\n          <tr>\n            <th>Product</th>\n            <th></th>\n            <th>Price</th>\n            <th>Quantity</th>\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.cart.map((item) => (\n            <tr key={item._id}> \n              <td>\n              <img src={item.image[0].img} alt={item.name} style={{width: \"50px\"}} className=\"thumbnail-img\"></img>\n              </td>\n              <td>\n                {item.name}\n              </td>\n              <td>\n                ${item.price}\n              </td>\n              <td>{item.purchaseQuantity}</td>\n              <td><CartQtyPicker item = {{...item}} /> </td>\n              <td>${calculateItemTotal(item)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <p style={{textAlign: \"right\"}}>Subtotal: ${calculateTotal()}</p>\n      <p className='fineprint'>Tax and shipping cost will be calulated later.</p>\n      <Button variant=\"success\" onClick={submitCheckout}>Checkout</Button>\n      </Container>\n    </div>\n  )\n}\n\nexport default Cart;","import React, { useEffect } from 'react'\nimport { QUERY_ALL_PRODUCTS } from '../../utils/queries';\nimport {\n    UPDATE_CURRENT_CATEGORY,\n    UPDATE_PRODUCTS,\n    UPDATE_SELECTED_PRODUCT\n} from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\nimport { idbPromise } from '../../utils/helpers';\nimport { useStoreContext } from '../../utils/GlobalState';\n\nimport { Card, Row , Col } from 'react-bootstrap';\n\nimport './style.css'\n\n\nfunction AllProducts() {\n    const [state, dispatch] = useStoreContext();\n    const { products , currentCategory, categories } = state;\n    const { category } = useParams();\n    const decodedCategory = category.replace(\"%20\", \" \")\n    const { loading, data } = useQuery(QUERY_ALL_PRODUCTS);\n    const selectedCategory = categories.find((thisCategory) => thisCategory.Name === decodedCategory);\n\n    function filterProducts() {\n        if (state && !currentCategory) {\n            return state.products;\n        }\n        return state.products.filter(\n            (product) => product.categories.find((category) => category._id === currentCategory)\n        );\n    }\n\n    useEffect(() => {\n        if (data) {\n            dispatch({\n                type: UPDATE_PRODUCTS,\n                products: data.products,\n            });\n            data.products.forEach((product) => {\n                idbPromise('products', 'put', product);\n            });\n            if (selectedCategory) {\n                dispatch({\n                    type: UPDATE_CURRENT_CATEGORY,\n                    currentCategory: selectedCategory._id\n                })\n            }\n        } else if (!loading) {\n            idbPromise('products', 'get').then((product) => {\n                dispatch({\n                    type: UPDATE_PRODUCTS,\n                    products: products,\n                });\n            });\n        } \n    }, [data, loading, dispatch, selectedCategory]);\n\n    function goToProduct(productId) {\n        dispatch({\n            type: UPDATE_SELECTED_PRODUCT,\n            selectedProduct: productId,\n        })\n        window.location.assign(\"/product/\" + productId)\n    }\n    \n\n    return (\n        // <Container className='card-container'>\n            // {/* loop through each product and generate a card */}\n            <Row xs={1} s={2} md={3} lg={4} className='g-4'>\n                {loading || !selectedCategory ? (\n                    <div>Loading...</div>\n                ) : data ? (\n                    filterProducts().map((product) => (\n                        <Col><Card className=\"single-card\"  key={product._id}\n                            onClick={() => {\n                                goToProduct(product._id)\n                            }} >\n                            <Card.Img variant=\"top\" src={product.image[0].img} style={{ paddingTop: '10px' }} />\n                            <Card.Body>\n                                <Card.Title className=\"product-name\">{product.name}</Card.Title>\n                                <Card.Text className=\"price\">{product.price}</Card.Text>\n                            </Card.Body>\n                        </Card></Col>\n                    ))\n                ) : (<div></div>)}\n            </Row>\n        // </Container>\n    )\n}\n\nexport default AllProducts;\n","import React, { useEffect, useState } from 'react';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n    UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { useParams } from 'react-router-dom';\nimport { Dropdown, DropdownButton, ButtonGroup, Container } from 'react-bootstrap'\nimport './style.css'\n\nexport default function CategoryMenu() {\n\n    const [state, dispatch] = useStoreContext();\n\n    const { category } = useParams();\n    const decodedCategory = category.replace(\"%20\", \" \")\n\n    const { categories } = state;\n\n    const [categoryName, updateCategoryName] = useState('All');\n\n    useEffect(() => {\n            updateCategoryName(decodedCategory);\n    }, [])\n\n    const handleClick = (id) => {\n        dispatch({\n            type: UPDATE_CURRENT_CATEGORY,\n            currentCategory: id,\n        });\n        updateCategoryName((categories.find((category)=> category._id === id)).Name);\n    };\n\n    return (\n<Container className='buttongroup-container'>\n        <DropdownButton as={ButtonGroup} title={`Category: ${categoryName}`} className='category-dropdown mx-auto mt-4' variant=\"light\" >\n                {categories ? (\n                    <div>\n                        {categories.map((category) => (\n                            <Dropdown.Item key={category._id}\n                                onClick={(e) => {\n                                    e.preventDefault()\n                                    handleClick(category._id)\n                                }}>{category.Name}\n                            </Dropdown.Item>\n                        ))}\n                    </div>\n                ) : (\n                    <div>\n                        <Dropdown.Item href=\"#\" key='None'>'Categories loading...'</Dropdown.Item>\n                    </div>\n                )}\n        </DropdownButton>\n        </Container>\n    )\n}\n","import React from \"react\";\nimport AllProducts from '../components/Products'\nimport CategoryMenu  from \"../components/CategoryMenu\";\nimport { Container } from \"react-bootstrap\";\n\nconst Categories = () => {\n    return (\n        <Container>\n            <CategoryMenu />\n            <AllProducts />\n        </Container>\n    )\n}\n\nexport default Categories;","import React from 'react';\nimport { Container, Button, Row, Col } from 'react-bootstrap';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CURRENT_QUANTITY } from '../../utils/actions';\nimport './style.css'\n\n\nexport default function QuantityPicker() {\n    const [state, dispatch] = useStoreContext();\n    const { currentQuantity } = state;\n\n    const increaseQty = () => {\n        dispatch({type: UPDATE_CURRENT_QUANTITY, currentQuantity: currentQuantity +1});\n    };\n\n    const decreaseQty = () => {\n        if ( currentQuantity > 0) {\n            dispatch({type: UPDATE_CURRENT_QUANTITY, currentQuantity: currentQuantity - 1});\n        }\n    };\n\n    return (\n   <Container className='button-container'>\n            <Row>\n                <Col lg={3}>\n                    <Button onClick={()=>{decreaseQty()}} className=\"button-qty button-sel\">\n                        -\n                    </Button>\n                </Col>\n               <Col lg={3}>{currentQuantity}</Col> \n                <Col lg={3}>\n                    <Button onClick={()=>{increaseQty()}} className=\"button-qty button-sel\">\n                        +\n                    </Button></Col>\n\n            </Row>\n            </Container>\n\n    );\n}","import { gql } from \"@apollo/client\";\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $userName: String!\n    $email: String!\n    $password: String!\n    $role: Int!\n  ) {\n    addUser(\n      userName: $userName\n      email: $email\n      password: $password\n      role: $role\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const DELETE_USER = gql`\n  mutation deleteUser($id: ID!) {\n    deleteUser(id: $id) {\n      _id\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!, $total: Float!) {\n    addOrder(products: $products, total: $total) {\n      _id\n      purchaseDate\n      products {\n        _id\n        name\n        price\n        description\n        image {\n          _id\n          description\n          img\n        }\n      }\n      total\n    }\n  }\n`;\n\nexport const ADD_CATEGORY = gql`\n  mutation addCategory($Name: String) {\n    addCategory(Name: $Name) {\n      _id\n      Name\n    }\n  }\n`;\n\nexport const UPDATE_CATEGORY = gql`\n  mutation updateCategory($id: ID!, $Name: String) {\n    updateCategory(id: $id, Name: $Name) {\n      _id\n      name\n    }\n  }\n`;\n\nexport const DELETE_CATEGORY = gql`\n  mutation removeCategory($Name: String!) {\n    removeCategory(Name: $Name) {\n      _id\n      Name\n    }\n  }\n`;\n\nexport const ADD_PRODUCT = gql`\n  mutation addProduct(\n    $name: String!\n    $description: String!\n    $price: Float!\n    $image: String!\n    $categories: [ID]!\n  ) {\n    addProduct(\n      name: $name\n      description: $description\n      price: $price\n      image: $image\n      categories: $categories\n    ) {\n      _id\n      name\n      description\n      price\n      image {\n        _id\n        description\n        img\n      }\n      categories {\n        _id\n        Name\n      }\n    }\n  }\n`;\n\nexport const UPDATE_PRODUCT = gql`\n  mutation updateProduct(\n    $_id: ID!\n    $name: String!\n    $description: String!\n    $price: Float!\n    $image: String!\n    $categories: [ID]!\n    $featured: Boolean\n    $seasonal: Boolean\n  ) {\n    updateProduct(\n      _id: $_id\n      name: $name\n      description: $description\n      price: $price\n      image: $image\n      categories: $categories\n      featured: $featured\n      seasonal: $seasonal\n    ) {\n      _id\n      name\n      description\n      price\n      image {\n        _id\n        description\n        img\n      }\n      categories {\n        _id\n        Name\n      }\n      featured \n      seasonal\n    }\n  }\n`;\n\nexport const DELETE_PRODUCT = gql`\n  mutation removeProduct($_id: ID!) {\n    removeProduct(_id: $_id) {\n      _id\n    }\n  }\n`;\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import { useMutation, useQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { QUERY_PRODUCT } from \"../../utils/queries\";\nimport {\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  LOGGEDIN,\n} from \"../../utils/actions\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport QuantityPicker from \"../QuantityPicker\";\nimport \"./style.css\";\nimport Auth from \"../../utils/auth\";\nimport { ADD_USER } from \"../../utils/mutations\";\nimport {createRandomUser }from \"../../utils/helpers\";\n\nexport default function ProductItem() {\n  const [state, dispatch] = useStoreContext();\n  const { productId } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const { loading, data, error } = useQuery(QUERY_PRODUCT, { variables: { _id: productId }, });\n  const { cart, currentQuantity, loggedIn } = state;\n  \n  const [addedToCart, toggleAdded] = useState(<div></div>);\n  const [addUser] = useMutation(ADD_USER);\n\n  useEffect(() => {\n    if (data && loading === false) {\n      setCurrentProduct(data.product);\n    }\n  }, [data, loading]);\n\n  const addToCart = async () => {\n    if (!loggedIn) {\n      const guestUser = createRandomUser()\n      const { data } = await addUser ({\n        variables: {\n          userName: guestUser.userName,\n          email: guestUser.email,\n          password: guestUser.password,\n          role: 2\n        },\n      });\n      console.log(data);\n      dispatch({\n        type: LOGGEDIN\n      });\n    }\n    toggleAdded(<div>Item added to Cart</div>);\n    const itemInCart = cart.find((cartItem) => cartItem._id === productId);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: productId,\n        purchaseQuantity: currentQuantity,\n      });\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: currentQuantity,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: currentQuantity },\n      });\n      idbPromise(\"cart\", \"put\", { ...currentProduct, purchaseQuantity: currentQuantity });\n    }\n  };\n\n  if (loading) {\n    return <div> ... loading ...</div>;\n  } else if (error) {\n    console.log(\"error: \", error)\n  } else {\n    return (\n      <div>\n        <Container\n          className=\"product-item\"\n          key={(Math.random() * 100) / 20 + 3}\n        >\n          <Row>\n            <Col xs={12} sm={12} md={4} lg={4}>\n              <img className=\"item-img\" alt={`${data.product.image[0].name}`}\n                src={`${data.product.image[0].img}`}\n              />\n            </Col>\n            <Col className=\"description\" xs={6} sm={6} md={8} lg={8}>\n              <h4>{data.product.name}</h4>\n              <p>{data.product.description}</p>\n              <h3>${data.product.price}</h3>\n              <div>\n                <p>Quantity</p>\n                <QuantityPicker />\n              </div>\n              <div className=\"my-2\">\n                <Button className=\"button my-2\" onClick={addToCart}>\n                  Add to Cart\n                </Button>\n                <a href=\"tel:123456789\">\n                  <Button className=\"button my-2\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      fill=\"currentColor\"\n                      className=\"bi bi-telephone\"\n                      viewBox=\"0 0 16 16\"\n                    >\n                      <path d=\"M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568 0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122l-2.19.547a1.745 1.745 0 0 1-1.657-.459L5.482 8.062a1.745 1.745 0 0 1-.46-1.657l.548-2.19a.678.678 0 0 0-.122-.58L3.654 1.328zM1.884.511a1.745 1.745 0 0 1 2.612.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z\" />\n                    </svg>{\" \"}\n                    Call to Order\n                  </Button>\n                </a>\n              </div>\n                  {addedToCart}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n\n  return <div> Hello world </div>;\n\n}\n","import React from 'react'\nimport { Row, Col ,} from 'react-bootstrap'\nimport './style.css'\n\nexport default function Hero() {\n\n    return (\n        <div>\n            <figure className='position-relative'>\n            <img src=\"/images/Hero_Image.jpg\" alt=\"hero bouquet\" className='img-fluid' />\n                <figcaption className='fig-caption'>\n                    <h2>Flower Delivery</h2>\n                    <h4>Flowers for every occassion</h4>\n                </figcaption>\n            </figure>\n           \n\n            <Row className='d-flex'>\n                <Col><a href=\"/categories/Romance\"><img href=\"/categories/romance\" src=\"/images/romance.jpg\" className='category-img d-flex' alt=\"romatic flowers\" /></a></Col>\n                <Col><a href=\"/categories/Get%20Well\"><img src=\"/images/get_well.jpg\" className='category-img d-flex' alt=\"white and blue flowers\"/></a></Col>\n                <Col><a href=\"/categories/Sympathy\"><img src=\"/images/simpathy.jpg\" className='category-img d-flex' alt=\"sympathy\" /></a></Col>\n\n            </Row>\n        </div>\n    )\n\n}\n","import React from 'react'\nimport { Container, Row, Card , Col } from 'react-bootstrap'\nimport './style.css'\n\nexport default function Featured() {\n    return (\n        <Container className='card-container'>\n            <h2>Featured Arrangements </h2>\n            <p>Order for your loved ones on that special occassion.</p>\n\n            <Row xs={1} s={2} md={3} lg={4} className='g-4'>\n                <Col>\n                \n                <Card className=\"single-card\">\n                   <a href=\"/product/6289c0707a47f1c348505bb6\" > <Card.Img variant=\"top\" src=\"images/Bouquet01.jpg\" style={{ paddingTop: '10px' }} /></a>\n                    <Card.Body>\n                        <Card.Title className=\"product-name\">Lavender Garden Bouquet</Card.Title>\n                        <Card.Text className=\"price\">$29.99,</Card.Text>\n                    </Card.Body>\n                </Card>\n                </Col>\n                <Col>\n                <Card className=\"single-card\">\n                <a href=\"/product/6289c0707a47f1c348505bb8\" > <Card.Img variant=\"top\" src=\"images/Bouquet02.jpg\" style={{ paddingTop: '10px' }} /></a>\n                    <Card.Body>\n                        <Card.Title className=\"product-name\">Healing Blue & White</Card.Title>\n                        <Card.Text className=\"price\">$29.99</Card.Text>\n                    </Card.Body>\n                </Card>\n                </Col>\n                <Col>\n                <Card className=\"single-card\">\n                <a href=\"/product/6289c0707a47f1c348505bba\" > <Card.Img variant=\"top\" src=\"images/Bouquet03.jpg\" style={{ paddingTop: '10px' }} /></a>\n                    <Card.Body>\n                        <Card.Title className=\"product-name\">Spring Sentiment Bouquet</Card.Title>\n                        <Card.Text className=\"price\">$35.99</Card.Text>\n                    </Card.Body>\n                </Card>\n                </Col>\n                <Col>\n                <Card className=\"single-card\">\n                <a href=\"/product/6289c0707a47f1c348505bbc\" > <Card.Img variant=\"top\" src=\"images/Bouquet04.jpg\" style={{ paddingTop: '10px' }} /></a>\n                    <Card.Body>\n                        <Card.Title className=\"product-name\">Floral Embrace</Card.Title>\n                        <Card.Text className=\"price\">$48.99</Card.Text>\n                    </Card.Body>\n                </Card>\n                </Col>\n            </Row>\n        </Container>\n\n\n    )\n}","import React from 'react'\nimport { Button, Row, Col } from 'react-bootstrap'\nimport './style.css'\n\nexport default function ShopNowBanner() {\n    return (\n        <div className='container-background'>\n            <Row className='d-flex'>\n                <Col className='m-auto mx-5'>\n                    <h2>We make you look good</h2>\n                    <h4>Choose one of our popular bouquets</h4>\n                    <p>○ We deliver in San Diego: Poway, Ramona, Rancho Bernardo, Rancho Peñasquitos, Carmel Mountain, Scripps Ranch, Mira Mesa </p>\n                    <p>○ Handmade: All our bouquets are craftly made with love.\n                    </p>\n                    <a href=\"/categories/Seasonal\"><Button className='button-shop'>Shop Now!</Button></a>\n                </Col>\n                <Col><img className='img-circle' alt=\"happy flower lady\" src=\"images/flower_circle.png\" /></Col>\n            </Row>\n        </div>\n    )\n}","import React from 'react'\nimport { Container, Row, Button, Card , Col} from 'react-bootstrap'\nimport './style.css'\n\nexport default function Seasonal() {\n    return (\n        <Container className='card-container'>\n            <h2>Seasonal</h2>\n        <p>Order it for your loved ones.</p>\n            <Row xs={1} s={2} md={3} lg={4} className='g-4'>\n            <Col>\n            <Card className=\"single-card\">\n                   <a href=\"/product/6289c0707a47f1c348505bbe\"><Card.Img variant=\"top\" src=\"images/Bouquet05.jpg\" style={{ paddingTop: '10px' }} /></a> \n                    <Card.Body>\n                        <Card.Title className=\"product-name\">Garden Pathway</Card.Title>\n                        <Card.Text className=\"price\">$35.99</Card.Text>\n                    </Card.Body>\n                </Card>\n                </Col>\n                <Col>\n                <Card className=\"single-card\">\n                <a href=\"/product/6289c0707a47f1c348505bc0\"><Card.Img variant=\"top\" src=\"images/Bouquet06.jpg\" style={{ paddingTop: '10px' }} /></a>\n                    <Card.Body>\n                        <Card.Title className=\"product-name\">Peace, Prayers & Blessings</Card.Title>\n                        <Card.Text className=\"price\">$59.99</Card.Text>\n                    </Card.Body>\n                </Card>\n                </Col>\n                <Col>\n                <Card className=\"single-card\">\n                <a href=\"/product/6289c0707a47f1c348505bc2\"> <Card.Img variant=\"top\" src=\"images/Bouquet07.jpg\" style={{ paddingTop: '10px' }} /></a>\n                    <Card.Body>\n                        <Card.Title className=\"product-name\">Cherished Memories</Card.Title>\n                        <Card.Text className=\"price\">$39.99</Card.Text>\n                    </Card.Body>\n                </Card>\n                </Col>\n                <Col>\n                <Card className=\"single-card\">\n                <a href=\"/product/6289c0707a47f1c348505bc4\"><Card.Img variant=\"top\" src=\"images/Bouquet09.jpg\" style={{ paddingTop: '10px' }} /></a>\n                    <Card.Body>\n                        <Card.Title className=\"product-name\">Vibrant Floral Medley</Card.Title>\n                        <Card.Text className=\"price\">$35.99</Card.Text>\n                    </Card.Body>\n                </Card>\n                </Col>\n                <a href='/categories/Seasonal'><Button className='button-shopnow mx-auto'>Shop Now</Button></a>\n</Row>\n        </Container>\n\n\n    )\n}","import { Container , Button } from 'react-bootstrap';\nimport React from 'react'\nimport './style.css'\n\nexport default function FinePrint () {\n\n    return (\n        <Container fluid className='fineprint-container d-flex'>\n            <Container className='text-container'>\n            <h2>Flowershop, we do delivery</h2>\n            <p>We deliver in San Diego: Poway, Ramona, Rancho Bernardo, Peñasquito, Carmel Mountain, Scripps Ranch, Mira Mesa, Area 2, Area 3, Area 4, Area 5, Area 6</p>\n            <p>Flowers for every occassion: Mother's Day, Friendship, Get Well, Graduation, Birthdays, Engagements, Bouquets, Anniversary Arrangements, Thank You Flowers, Balloons</p>\n            <Button className='button'><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-telephone\" viewBox=\"0 0 16 16\">\n  <path d=\"M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568 0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122l-2.19.547a1.745 1.745 0 0 1-1.657-.459L5.482 8.062a1.745 1.745 0 0 1-.46-1.657l.548-2.19a.678.678 0 0 0-.122-.58L3.654 1.328zM1.884.511a1.745 1.745 0 0 1 2.612.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z\"/>\n</svg> Call to order</Button>\n            </Container>\n        </Container>\n    )\n\n\n}","import React from \"react\";\nimport Hero from \"../components/Hero\";\nimport Featured from \"../components/Featured\";\nimport ShopNowBanner from \"../components/ShopNowBanner\";\nimport Seasonal from \"../components/Seasonal\";\nimport FinePrint from \"../components/FinePrint\";\n\n\n\nconst Home = () => {\n  return (\n    \n<div>\n<Hero />\n<Featured />\n<ShopNowBanner />\n<Seasonal />\n<FinePrint />\n\n\n</div>\n\n\n  );\n};\n\nexport default Home;\n","import React from 'react'\nimport './style.css'\nimport { Container , Row, Col , Image } from 'react-bootstrap';\n\nexport default function Footer () {\n  return (\n    <footer className=\"container-fluid background mt-5\">\n        <hr className=\"hr\"></hr>\n        <Container className='py-3'>\n            <Row>\n                <Col lg={6} md={6} sm={6} >\n                <Image src=\"/images/encanto_logo_footer.png\" className='d-inline-block align-top logo-footer mt-5 mb-5'/>\n                \n                </Col>\n                <Col lg={3} md={3} sm={3}>\n                <h5 className=\"h5\">Categories</h5>\n                <ul className=\"nav flex-column\">\n            <li className=\"nav-item mb-2\">\n              <a href=\"/categories/Seasonal\" className=\"nav-link p-0 links\">\n                Seasonal\n              </a>\n            </li>\n            <li className=\"nav-item mb-2\">\n              <a href=\"/categories/Romance\" className=\"nav-link p-0 links\">\n                Romance\n              </a>\n            </li>\n            <li className=\"nav-item mb-2 links\">\n              <a href=\"/categories/Get%20Well\" className=\"nav-link p-0 links\">\n                Get Well\n              </a>\n            </li>\n            <li className=\"nav-item mb-2\">\n              <a href=\"/categories/Sympathy\" className=\"nav-link p-0 links\">\n                Sympathy\n              </a>\n            </li>\n            <li className=\"nav-item mb-2\">\n              <a href=\"/categories/Friendship\" className=\"nav-link p-0 links\">\n                Friendship\n              </a>\n            </li>\n            <li className=\"nav-item mb-2\">\n              <a href=\"/categories/Funerals\" className=\"nav-link p-0 links\">\n                Funerals\n              </a>\n            </li>\n          </ul>\n                </Col>\n                <Col lg={3} md={3} sm={3} className=\"info-col\">\n                <h5 className=\"h5\">Info</h5>\n          <ul className=\"nav flex-column\">\n            <li className=\"nav-item mb-2\">\n            <p className=\"links\">Contact Us:\n              <a href=\"tel:1231231234\" className=\"nav-link p-0 links\">\n                123-123-1234\n              </a></p>\n            </li>\n            <li className=\"nav-item mb-2\">\n              <a href=\"#\" className=\"nav-link p-0 links\">\n                Terms & Conditions\n              </a>\n            </li>\n            <li className=\"nav-item mb-2\">\n              <a href=\"#\" className=\"nav-link p-0 links\">\n                Privacy Policy\n              </a>\n            </li>\n          </ul>\n                \n                </Col>\n            </Row>\n        </Container>\n    </footer>\n  )\n}\n\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_ORDER } from '../../utils/mutations';\nimport { idbPromise } from '../../utils/helpers';\nimport { Container } from 'react-bootstrap';\nimport './style.css'\n\nfunction Success() {\n\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const total = await idbPromise('total', 'get');\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products: products, total: parseFloat(total[total.length - 1])} });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Container className='success-container my-5'>\n        <h2>Success!</h2>\n        <p>Thank you for your purchase!</p>\n        <p>You will now be redirected to the home page</p>\n      </Container>\n    </div>\n  );\n}\n\nexport default Success;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../../utils/auth\";\nimport { ADD_USER } from \"../../utils/mutations\";\nimport { Form , Button} from \"react-bootstrap\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { LOGGEDIN } from '../../utils/actions';\nimport './style.css'\n\nfunction Signup(props) {\n  const [dispatch] = useStoreContext();\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const { data } = await addUser({\n      variables: {\n        userName: formState.userName,\n        email: formState.email,\n        password: formState.password,\n        role: 0\n      },\n    });\n    const token = data.addUser.token;\n    Auth.login(token);  \n    dispatch({\n      type: LOGGEDIN\n    });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1 mt-3\">\n\n      <h2>Signup</h2>\n\n      <Form  className=\"signup-form mt-4\" onSubmit={handleFormSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>User Name</Form.Label>\n          <Form.Control type=\"userName\"\n            name=\"userName\"\n            id=\"userName\"\n            placeholder=\"User Name\"\n            onChange={handleChange} />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"Email\"\n            onChange={handleChange} />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control   type=\"password\"\n            name=\"password\"\n            id=\"pwd\"\n            placeholder=\"Password\"\n            onChange={handleChange} />\n        </Form.Group>\n        <Button className=\"button-submit\" type=\"submit\" variant=\"success\">\n          Submit\n        </Button>\n\n      </Form>\n      <Link className=\"link-login\" to=\"/login\">Go to Login →</Link>\n      {/* <form onSubmit={handleFormSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"userName\" className=\"p-2\">User Name</label> \n          <input\n          \n            type=\"userName\"\n            name=\"userName\"\n            id=\"userName\"\n            placeholder=\"User Name\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group mb-2\">\n          <label htmlFor=\"email\" className=\"p-2\">Email address</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"Email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group mb-4\">\n          <label htmlFor=\"pwd\" className=\"p-2\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"pwd\"\n            placeholder=\"Password\"\n            onChange={handleChange}\n          />\n        </div>\n        <Button type=\"submit\" variant=\"success\">\n          Submit\n        </Button>\n      </form> */}\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../../utils/mutations';\nimport { LOGGEDIN } from '../../utils/actions';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport Auth from '../../utils/auth';\nimport { Form, Button } from \"react-bootstrap\"\nimport \"./style.css\"\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n  const [dispatch] = useStoreContext();\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n      dispatch({\n        type: LOGGEDIN\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    setTimeout(() => {\n      window.location.assign('/');\n    }, 1000);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1 mt-3\">\n      \n\n      <h2>Login</h2>\n\n      <Form className=\"signup-form mt-4\" onSubmit={handleFormSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control placeholder=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange} />\n        </Form.Group>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control   type=\"password\"\n            name=\"password\"\n            id=\"pwd\"\n            placeholder=\"Password\"\n            onChange={handleChange} />\n        </Form.Group>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <Button className=\"button-submit\" type=\"submit\" variant=\"success\">\n          Submit\n        </Button>\n      </Form>\n\n      <Link className=\"link-login mt-4\" to=\"/signup\">Don't have an account? Sign up here →</Link>\n\n\n      {/* <form onSubmit={handleFormSubmit}>\n        <div className=\"form-group mb-2\">\n          <label className=\"p-2\" htmlFor=\"email\">Email address</label>\n          <input\n            placeholder=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group mb-4\">\n          <label className=\"p-2\" htmlFor=\"pwd\">Password</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n        </div>\n      </form> */}\n    </div>\n  );\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Table, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_USER } from '../../utils/queries';\nimport { DELETE_USER } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\nimport './style.css'\n\nfunction UserProfile() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n  let orderHistoryTable = <div></div>\n  let deleteUser = false;\n  if (data) {\n    user = data.user;\n    orderHistoryTable = user.orders.map((order) => (\n        <tr key={order._id}>\n              <td>{order._id}</td>\n              <td>{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}</td>\n              <td> ${order.total} </td>\n          </tr>));\n  }\n\n  const [useProgramMutation, {data: deletedData, loading, error}] = useMutation(DELETE_USER);\n\n  function handleDelete() {\n    if (deleteUser) {\n        const user = useProgramMutation({ variables: {id: data.user._id}});\n        Auth.logout();\n      }\n  }\n\n  useEffect(() => {\n      handleDelete();\n  }, [deleteUser]);\n\n  return (\n    <div>\n        {user ? (\n            <Container className='order-history my-5'>\n                <Link className='link-back' to=\"/\">Back to Shopping →</Link>\n                <h2 className='mt-3'>Hello, {user.userName}</h2>\n\n                <h4 className='order-history'>Order History</h4>\n                <Table className='table-order-history' striped>\n                    <thead>\n                        <tr>\n                            <th>Order</th>\n                            <th>Date</th>\n                            <th>Total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orderHistoryTable}\n                    </tbody>\n                </Table>\n\n                <Button className='button-delete' onClick={()=> {useProgramMutation({ variables: {id: user._id}}); Auth.logout()}}>Delete Account</Button>\n            </Container>\n        ) : null}\n    </div>\n  );\n}\n\nexport default UserProfile;\n","\nimport React, { useEffect, useState } from 'react'\n// import { QUERY_ALL_PRODUCTS, QUERY_CATEGORIES } from '../../utils/queries';\n// import { ADD_PRODUCT, UPDATE_PRODUCT, DELETE_PRODUCT, ADD_CATEGORY, UPDATE_CATEGPRY, DELETE_CATEGORY } from '../../utils/actions';\n// import { useStoreContext } from '../../utils/GlobalState';\n// import {\n//     UPDATE_CURRENT_CATEGORY,\n// } from '../../utils/actions';\nimport { useParams } from 'react-router-dom';\nimport { Dropdown, DropdownButton, ButtonGroup, Container } from 'react-bootstrap'\n// import './style.css' \n\nexport default function CategoryMenu() {\n\n  // const [state, dispatch] = useStoreContext();\n\n  const { category } = useParams();\n  const decodedCategory = category.replace(\"%20\", \" \")\n\n  // const { categories } = state;\n\n  const [categoryName, updateCategoryName] = useState('All');\n\n  useEffect(() => {\n          updateCategoryName(decodedCategory);\n  }, [])\n\n  // const handleClick = (id) => {\n  //     dispatch({\n  //         // type: UPDATE_CURRENT_CATEGORY,\n  //         currentCategory: id,\n  //     });\n  //     updateCategoryName((categories.find((category)=> category._id === id)).Name);\n  // };\n\n  return (\n\n    <div>\n        <h1 className=\"p-5\">What would you like to do today?</h1>\n        <form>\n    {/* <form onSubmit={handleFormSubmit}> */}\n    {/* <div className=\"form-group\">\n      <label htmlFor=\"userName\" className=\"p-2\">User Name</label> \n      <input\n      \n        type=\"userName\"\n        name=\"userName\"\n        id=\"userName\"\n        placeholder=\"User Name\"\n        onChange={handleChange}\n      />\n    </div>\n    <div className=\"form-group mb-2\">\n      <label htmlFor=\"email\" className=\"p-2\">Email address</label>\n      <input\n        type=\"email\"\n        name=\"email\"\n        id=\"email\"\n        placeholder=\"Email\"\n        onChange={handleChange}\n      />\n    </div>\n    <div className=\"form-group mb-4\">\n      <label htmlFor=\"pwd\" className=\"p-2\">Password</label>\n      <input\n        type=\"password\"\n        name=\"password\"\n        id=\"pwd\"\n        placeholder=\"Password\"\n        onChange={handleChange}\n      />\n    </div> */}\n    <button type=\"submit\" className=\"btn btn-primary\">\n      Submit\n    </button>\n  </form>\n  </div>\n\n    \n\n  )\n}\n","import React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { StoreProvider } from './utils/GlobalState';\nimport { setContext } from '@apollo/client/link/context';\nimport EncantoNav from './components/Navbar';\nimport Cart from './pages/Cart';\nimport Categories from './pages/Categories'\nimport ProductItem from './components/ProductItem';\nimport Home from './pages/Home';\nimport Footer from './components/Footer';\nimport Success from './pages/Success/index.js';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport UserProfile from './pages/UserProfile';\nimport AdminPanel from './pages/AdminPanel';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <StoreProvider>\n        <Router>\n          <div>\n            <EncantoNav />\n            <Routes>\n              <Route\n                path=\"/\"\n                element={<Home />}\n              />\n              <Route\n                path=\"/signup\"\n                element={<Signup />}\n              />\n              <Route\n                path=\"/login\"\n                element={<Login />}\n              />\n              <Route\n                path=\"/userprofile\"\n                element={<UserProfile />}\n              />\n              <Route\n                path=\"/categories/:category\"\n                element={<Categories />}\n              />\n              <Route\n                path=\"/cart\"\n                element={<Cart />}\n              />\n              <Route\n                path=\"/success\"\n                element={<Success />}\n              />\n              <Route\n                path=\"/product/:productId\"\n                element={<ProductItem />}\n              />\n              <Route\n                path=\"/adminpanel\"\n                element={<AdminPanel />}\n              />\n            </Routes>\n          </div>\n          <Footer />\n        </Router>\n      </StoreProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);"],"sourceRoot":""}